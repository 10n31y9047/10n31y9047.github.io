<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Input System使用指南（二） 直接输入</title>
      <link href="2024/08/29/input-system-shi-yong-zhi-nan-er-zhi-jie-shu-ru/"/>
      <url>2024/08/29/input-system-shi-yong-zhi-nan-er-zhi-jie-shu-ru/</url>
      
        <content type="html"><![CDATA[<p>与Input Manager相似，Input System也支持用代码直接获取设备的输入。</p><h1 id="几个例子"><a href="#几个例子" class="headerlink" title="几个例子"></a>几个例子</h1><h2 id="1-2D-Top-Down视角下的移动"><a href="#1-2D-Top-Down视角下的移动" class="headerlink" title="1. 2D Top-Down视角下的移动"></a>1. 2D Top-Down视角下的移动</h2><p>旧版代码：</p><p><img src="https://s2.loli.net/2022/12/04/1PKRvWgy94omUDp.png"></p><p>新版代码：</p><p><img src="https://s2.loli.net/2022/12/04/PilWQsMa2DrwcCI.png"></p><p>可以看到，Input System将各种输入设备单独拆开来，独立地获取某一个输入，这里的设备可以是键盘（Keyboard）、鼠标（Mouse）、手柄（Gamepad）甚至触摸屏（Touchscreen）等。</p><h2 id="2-Gamepad控制器"><a href="#2-Gamepad控制器" class="headerlink" title="2. Gamepad控制器"></a>2. Gamepad控制器</h2><p><img src="https://s2.loli.net/2022/12/05/q5iBZmyNvS2PaF3.png"></p><p>这个方法中的gamepad.buttonSouth.wasPressedThisFrame是用来判断按键在当前帧是否被按下，gamepad.buttonSouth.wasReleasedThisFrame判断按键在当前帧是否被释放。类似的属性还有很多，比如Mouse.current.position可以获取当前鼠标位置，Keyboard.current.aKey.isPressed用以判断该键是否正在被按下等。</p><h1 id="输入设备支持"><a href="#输入设备支持" class="headerlink" title="输入设备支持"></a>输入设备支持</h1><p><img src="https://s2.loli.net/2022/12/06/U8gJ5EdmDqCkVvr.png"></p><p>详情可参考<a href="https://docs.unity.cn/Packages/com.unity.inputsystem@1.3/manual/SupportedDevices.html">Unity 官方手册</a>。</p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Input System </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Input System使用指南（一） 环境配置</title>
      <link href="2024/08/29/input-system-shi-yong-zhi-nan-yi-huan-jing-pei-zhi/"/>
      <url>2024/08/29/input-system-shi-yong-zhi-nan-yi-huan-jing-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>Unity在设计之初并未预见到当下的项目需要支持如此多的平台和设备，旧的Input Manager（即UnityEngine.Input）在这些方面的使用上并不简洁舒适，在多平台以及多设备输入的处理时稍显力不从心。因此，Unity官方于2016年开始研发新一代输入系统Input System（即UnityEngine.InputSystem），截至笔者撰写此文章时，已更新到v1.7.0。</p><p>Input System实现了一个可以用任何输入设备来控制Unity中的内容的系统。它基于事件系统，将设备输入与动作逻辑分开来，通过配置映射输入信息。</p><h1 id="安装Input-System-Package"><a href="#安装Input-System-Package" class="headerlink" title="安装Input System Package"></a>安装Input System Package</h1><p>Input System需要在Unity 2019.4+版本中才能安装。</p><p>要安装Input System，你需要在Unity中打开Package Manager，更改左上角选项卡为”“Package: Unity Registry”并在列表中找到“Input System”，点击“Install”即可。</p><p><img src="https://s2.loli.net/2022/12/04/EyMcQ3A8HUSfrat.png"></p><h1 id="启用新的输入后端"><a href="#启用新的输入后端" class="headerlink" title="启用新的输入后端"></a>启用新的输入后端</h1><p>在默认状态下，Unity会启用旧的Input Manager而禁用对Input System的支持，从而保证之前的Unity项目可以正常运行。</p><p>当安装了Input System Package之后，Unity会弹出一个对话框，询问是否使用新的输入后端。如果选择“Yes”，则Unity会启用新的输入后端并自动重启编辑器。</p><p><img src="https://s2.loli.net/2022/12/04/hJ46wRb2WMcAemK.png"></p><p>你也可以随时在Project Settings里随时更改这项设置，更改后同样会自动重启编辑器。</p><p><img src="https://s2.loli.net/2022/12/04/QgE2a8d7fqYo95O.png"></p><p>注意到上图中该项设置为“Both”，这说明旧的Input Manager和新的Input System可以同时生效。</p><p>事实上，当Input System生效时，Unity会自动添加一条<code>#define ENABLE_INPUT_SYSTEM = 1</code>，而Input Manager生效时，会添加<code>#define ENABLE_LEGACY_INPUT_MANAGER = 1</code>。因为二者可以同时生效，这两个值可以同时为1.</p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Input System </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏分析：Katana Zero（武士零）</title>
      <link href="2024/01/06/you-xi-fen-xi-katana-zero-wu-shi-ling/"/>
      <url>2024/01/06/you-xi-fen-xi-katana-zero-wu-shi-ling/</url>
      
        <content type="html"><![CDATA[<p>Katana Zero是一款由Askiisoft开发，Devolver Digital于2019年发行的街机风格2D横版动作游戏。其首周销量便突破了10万份，足以体现它的受欢迎度。目前游戏在Steam有50000+条测评，按平均销量评测比系数为63计算其销量已经超过300万份。游戏从玩法、剧情、美术风格、音乐等各方面都别具一格，这些元素融合在一起，创造出一种独特的游戏体验。我个人游玩通关了许多次，每次都会对这个游戏有更深刻的理解，现试对其优缺点和特色做一个分析，以期能从中学习借鉴到一些游戏设计的经验。</p><h1 id="一、玩法、关卡设计与难度"><a href="#一、玩法、关卡设计与难度" class="headerlink" title="一、玩法、关卡设计与难度"></a>一、玩法、关卡设计与难度</h1><h2 id="玩法"><a href="#玩法" class="headerlink" title="玩法"></a>玩法</h2><p>我曾在书中看到过这样的论断：游戏是一种创造体验的机器。我深以为然。无论是剧情也好，画面也罢，这一切都是服务于创造体验的。而这其中最核心的部分当属游戏玩法。</p><p>说回Katana Zero，若说它想要给玩家带来什么样的战斗体验，我想用两个字就可以概括：“爽快”。而为了更好传达这种感觉，在玩法上游戏抛弃了复杂的数值设计，无论是主角对大部分的敌人，还是敌人对主角，都是一击必杀。这意味着玩家必须时刻保持高度专注，躲避伤害寻求机会一招制敌。</p><p>除了一般的横版动作游戏提供的攻击、移动、跳跃和躲避操作外，Katana Zero还有三种比较特殊的机制：</p><h3 id="1-弹反子弹"><a href="#1-弹反子弹" class="headerlink" title="1. 弹反子弹"></a>1. 弹反子弹</h3><p>游戏中存在不少远程攻击的敌人，这对于我们这个主要攻击方式为近战攻击的主角确实很棘手，于是在游戏的最开始，玩家就会被提示可以利用攻击来反弹敌人的子弹达成击杀。<br><img src="https://s2.loli.net/2024/01/19/D1rnSx4aUgqkhlV.png" alt="提示玩家按攻击键（即鼠标左键）反弹子弹"><br>对于玩家来说，这是一个极具挑战性的机制。运用这种技巧要求玩家具备足够的反应速度，只有在子弹快要攻击到主角的瞬间进行攻击才能达成弹反。也正是因为这种机制的难度颇大，而且效果非常“酷”，每当玩家达成弹反时，会极大地满足玩家的成就感。另外，第六章公馆的Boss是需要利用这一机制来达成击杀的，任何其他攻击手段都是无效的。<br><img src="https://s2.loli.net/2024/01/19/VPqSzYTNuc5xJ4X.png" alt="V，公馆的Boss，玩家需要反弹三次V射向主角的子弹才能击败他"></p><h3 id="2-慢动作"><a href="#2-慢动作" class="headerlink" title="2. 慢动作"></a>2. 慢动作</h3><p>这一机制是Katana Zero最具特色的机制。类似《黑客帝国》中的子弹时间，在按下Shift键后，场景中的一切活动的时间都将变慢，这种机制带给玩家更充裕的时间判断最佳时机，规避敌人的攻击，以及更精确地进行攻击或弹反。对于手残党玩家来说，这一机制十分友好，一定程度上降低了游戏难度，甚至不啻于一种“官方外挂”。<br><img src="https://s2.loli.net/2024/01/19/qpN8xX4jQ6toyUL.png" alt="慢动作机制"><br>当然，出于平衡性的考虑，这种强大的能力一定会被加以限制。UI左上方的电池即为这一能力的充能条。当电池电量见底时，慢动作机制就会自动退出。这就要求玩家只在必须的时刻才动用这项能力，把好钢用在刀刃上。不过万幸的是，即使电量用光了，在不使用技能的时候，电量会随着时间缓慢回升，不至于带给玩家过分的焦虑感。</p><h3 id="3-投掷"><a href="#3-投掷" class="headerlink" title="3. 投掷"></a>3. 投掷</h3><p>在第二章酒店中，引入了投掷这一机制。玩家可以捡起地图上的各种道具，如瓶子、花盆等，然后投掷这些物品攻击敌人。这一机制为玩家提供了更多的战斗选择，使得战斗更加丰富和有趣。例如面对多个敌人，玩家可以先投掷道具解决一个，降低同时对抗多个敌人所面临的风险。又比如面对远程敌人时，玩家也可以选择直接用投掷道具解决。<br><img src="https://s2.loli.net/2024/01/19/ht1ybUI2ViCFxvz.png" alt="投掷物，按鼠标右键可以捡起"><br>此外，有一些道具有特殊的功能，可以用来解决战斗中的困境，或者触发场景中的机关来解决关卡中的难题，这些道具丰富了玩家过关的手段，提供了一定的策略性。有关这一点我将在下面对关卡部分的分析中详细论述。<br><img src="https://s2.loli.net/2024/06/08/D6Aj859GasVf1SQ.png" alt="用烟雾遮住摄像头开启闸门"></p><h2 id="关卡"><a href="#关卡" class="headerlink" title="关卡"></a>关卡</h2><p>作为一款小制作独立游戏，Katana Zero并不像其他动作类游戏（比如鬼泣、黑暗之魂系列）具有复杂的数值和技能系统，但这并不意味着它的玩法是千篇一律、鲜有变化的。机制不够，关卡来凑，在关卡设计方面，Katana Zero可以说是极具创新的。</p><h3 id="1-多样的场景"><a href="#1-多样的场景" class="headerlink" title="1. 多样的场景"></a>1. 多样的场景</h3><p>游戏一共11个关卡，每一关都自己独特的场景，如酒店、舞厅、监狱等，各有自己的特点和氛围，同时也各有不同道具和环境。例如在酒店里可投掷的道具是花盆、台灯，而舞厅里就变成了酒瓶。这些设计充满惊喜，仔细想想又十分合乎情理，丰富了游玩的体验。</p><h3 id="2-丰富的环境元素交互"><a href="#2-丰富的环境元素交互" class="headerlink" title="2. 丰富的环境元素交互"></a>2. 丰富的环境元素交互</h3><p>环境元素交互是游戏的一个重要特色，它们为玩家提供了不同的战斗方式和选择，增加游戏的策略性和趣味性。游戏中有几类环境要素，其一是可拾取的道具，例如前面提到的花盆酒瓶等，可以用来直接攻击敌人，也可以丢到其他地方引起敌人的注意控制他们的位置；还有燃烧瓶，可以点燃敌人或引爆油桶；烟雾弹，可以产生一片不可视的烟雾阻挡敌人的视线。<br><img src="https://s2.loli.net/2024/01/19/c7ozZ9nFltyWOhU.png" alt="烟雾弹，可以暂时遮蔽敌人的视线"><br>第二类是可破坏的道具，例如烟雾管道，可以放出烟雾，效果和烟雾弹一样；油桶，可以造成范围爆炸。<br><img src="https://s2.loli.net/2024/01/19/nXYzVbHivm4lGjM.png" alt="油桶，爆炸可击杀敌人、破坏道具并引爆周围的油桶"><br>最后一类是可互动的道具，最典型的是门。在Katana Zero中，开门会立刻引起房间内敌人的注意，但是如果有敌人紧邻着门，开门或破坏门的同时，这个敌人也会被消灭。所以有的时候玩家可以等到敌人巡逻到门旁边再动手，这也一定程度上增加了游戏的策略性。</p><h3 id="3-别出心裁的关卡设计"><a href="#3-别出心裁的关卡设计" class="headerlink" title="3. 别出心裁的关卡设计"></a>3. 别出心裁的关卡设计</h3><p>虽然Katana Zero的主要机制是挥刀攻击敌人，但并不意味着全程都是一路砍杀过去的。在一些关卡设计上，不仅考验玩家的技巧和反应，也考验玩家的策略和创造力。例如舞厅和监狱关卡就设计了潜行的玩法，玩家需要利用环境里的各种躲避处绕开警卫，不能引起警报；制片厂关卡地下的矿车部分，这是一个对时间要求比较高的关卡，玩家在击败敌人的同时，还要兼顾触发场景内机关的时机，如此才能顺利的乘坐矿车通过地图；公馆后半段的摩托车追逐战，这个关卡改变了游戏的视角，从横版游戏常见的侧视视角变成类似《双截龙》里那样场景具有纵深的视角，营造了与前面的关卡完全不同的体验；还有唐人街前面部分的赌场，充分结合了剧情中主角可以在脑海中预测未来的特性，控制时间来达成赚取10万金币的目标。另外，在普通的战斗关卡里，走不同的路线，敌人的反应也不相同，这样的设计给游戏的战斗增添了一个策略的维度，丰富了游玩体验。</p><h3 id="4-设计精良的boss战"><a href="#4-设计精良的boss战" class="headerlink" title="4. 设计精良的boss战"></a>4. 设计精良的boss战</h3><p>Katana Zero中的Boss战设计丰富多样，每一个Boss都有其独特的机制挑战和解决方案，而且这些Boss战的设计都十分贴合剧情，这里以嘟嘴先生的boss战为例。嘟嘴先生的武器是一把斧子，战斗开始时，主角被绑在椅子上，玩家需要交替按左右键扭动身体让自己侧身摔倒，使嘟嘴先生第一次攻击把椅子打碎。一旦获得自由，玩家需要躲过他的下一次攻击，捡起地上断掉的椅子腿扔向门边的警卫，夺回自己的剑并杀死另一名警卫。至此，第一阶段结束，这一阶段的敌人行动是固定的，也就是说这是一段具有背板性质的战斗。进入到下一阶段，嘟嘴先生在处于待机动作手持武器时不能被正面攻击，所以需要等待他将斧头扔出去或者绕到他后面攻击他。一旦得手他将被击倒，这时玩家需要跑到嘟嘴先生身边按攻击键，嘟嘴先生会抵挡住主角的攻击。这时出现一个计量条，我们需要增加计量条的进度，一共需要击倒他四次才能将计量条填满。计量条填满后，主角最终以一个非常帅气的姿势砍下了嘟嘴先生的头颅。<br><img src="https://s2.loli.net/2024/06/08/I5LErmCGop7waVN.png" alt="Zero与嘟嘴先生僵持，玩家需要填满红色计量条"><br>在第二阶段，嘟嘴先生的攻击方式很多，这要求玩家根据他的动作快速做出反应，亦需要玩家具有足够的耐心和专注度。这一阶段嘟嘴先生的动作十分迅捷，而且两次攻击间可供玩家喘息的时间并不长，慢动作条回复的速度不足以支撑玩家在每次面临攻击时都能发动技能，所以对于操作不够熟练的玩家这一阶段是难度很大的。但与之相对的，在经过一次又一次尝试与失败后，玩家对打败boss的流程越来越熟悉，技巧水平将得到提升，最终在玩家击败boss的一瞬间，自豪感和成就感油然而生，这将带来一种非常舒畅的体验。</p><h2 id="难度"><a href="#难度" class="headerlink" title="难度"></a>难度</h2><p>作为一款动作游戏，并且一击必杀的设定，使得这款游戏的难度其实颇高。但由于有慢动作这一机制的存在，在一定程度上降低了一周目的通关难度。并且在某些地方，剧情里的话语还会给予玩家一些对过关有利的信息。<br><img src="https://s2.loli.net/2024/01/19/yS7Vmh6X4QtlpGb.png" alt="V的台词中藏有提示"><br>比如上图中V说的话其实就是在提示玩家可以利用场景中的激光开关来消灭敌人。另外，大关卡中的每一张地图都是一个小关卡，每一个小关卡的流程其实并不长，大部分都在一分钟以内，即使失败，也就是从每一个小关卡的开始部分重新来，这意味着失败对于玩家来说并非一件非常挫败的事情，试错的成本很低。</p><p>前面的关卡中敌人和机关的难度并不大，随着进度的推进，玩家会逐渐接触到更多不同的敌人和机关，这些也在增加游戏的复杂程度，循序渐进地提高游戏的难度。</p><p>最后，游戏通关之后会解锁速攻模式，在速攻模式中玩家可以打开困难模式，增加敌人的数量，亦可选择禁用慢动作，体验更加硬核的战斗模式。速攻模式的存在增加了游戏的寿命，也满足了动作类硬核玩家的需求，很多核心玩家都在这个模式里不断地刷新时间记录，挑战自我。</p><h1 id="二、剧情与叙事特点"><a href="#二、剧情与叙事特点" class="headerlink" title="二、剧情与叙事特点"></a>二、剧情与叙事特点</h1><p>对于一个优秀的游戏来说，仅仅只有玩法和机制是远远不够的，比如“玩家操纵人物跳起，在半空中与怪物发生碰撞，并利用碰撞弹跳机制通过障碍到达另一端”听起来就远不如“马里奥跳起来，踩着板栗仔的头借了下力，成功越过了深渊到了对岸”生动有趣。上面的例子说明，我们若以虚构的情节来包装游戏机制，就能产生另一个层面上的情感意义。</p><p>在这方面Katana Zero做的可谓是相当出色。在Katana Zero的Steam商店页面官方简介中有这样一句话，“《武士 零（Katana ZERO）》是一款新黑色电影风格的华丽平台动作游戏”。这里的“新黑色电影”（Neo-Noir）高度概括了游戏的叙事风格，即继承了“黑色电影”（Film Noir）的那种晦暗、悲观且压抑的，以犯罪和荒诞为主题的故事风格。</p><p>游戏讲述了主角Zero作为一个失忆的、有着特殊能力的杀手，在执行抹除与神秘药品“柯罗诺斯”相关的人的任务过程中，逐步了解自己的身世与过去，并揭示了一个深深埋藏的秘密。</p><p>Katana Zero在剧情与叙事方面有以下几个特点：</p><h2 id="1-丰满的人物形象"><a href="#1-丰满的人物形象" class="headerlink" title="1. 丰满的人物形象"></a>1. 丰满的人物形象</h2><p>游戏在剧情的推进过程中塑造了很多生动的人物形象，无论是主角还是配角，都能给玩家留下深刻的印象。以其中的剧情前半段最重要的反派角色V为例，V是一个蓝头发、留着“很蠢的发型”（游戏内后面另一个重要角色小女孩的评价）、大金链子满身金饰品的大块头，他在第一章初次登场就炸飞了Zero营救的科学家的脑袋，短短两句话就揭示了他的特点，一个残忍疯狂的俄罗斯人。<br><img src="https://s2.loli.net/2024/06/05/KWRaBjGUn58eYXw.png" alt="V的出场"><br>第四章最后一段中V在寄来的录像带里杀死了隔壁的邻居，加深了玩家对其暴力、没有同情心的印象。在第五章开头在加长礼车上V却称自己是身为敌人的Zero的超级粉丝，还邀请Zero“把这俩蠢婊子带去51号摄影棚锤了她们的脑瓜子”，展现了V行事乖张，没有道德底线的一面。<br><img src="https://s2.loli.net/2024/06/05/fGcNmo7JYal2shk.png"><br>到了第六章，V绑架了Zero，经过一番对话，玩家会发现V外在表现出来的暴力残忍居然是为了得到认同，并且在Zero击败V之后，V瘫坐在地上依然在嘴硬，用击败其他空无士兵的往事恐吓Zero.<br><img src="https://s2.loli.net/2024/06/05/BJmiPS4pD5IrWeL.png"><br>至此，一个热衷于杀戮却色厉内荏的形象便塑造完成了。</p><p>除了V，游戏中还描绘了一个满嘴谎言医生，一名美丽且身手高超的刺客白雪，还有天真无邪、在一个个杀戮任务后能带给Zero片刻温情的红衣服小女孩等形象，这些精心刻画的角色在不断推动剧情发展的同时能使玩家产生情感共鸣，丰富了游戏的情感体验。</p><h2 id="2-非线性叙事"><a href="#2-非线性叙事" class="headerlink" title="2. 非线性叙事"></a>2. 非线性叙事</h2><p>非线性叙事是Katana Zero最吸引人的特征之一。游戏中药物柯罗诺斯给主角带来预知时间的能力，同时也使主角对时间的感知变得混乱，记忆变得扭曲，使主角难以辨别现实与幻觉。在剧情上，游戏也通过插叙、倒序等手法、多结构层次的故事与碎片化的叙事，为玩家带来了相似的体验，有时一段剧情会突然中断跳转到另一段剧情上，让人汗毛竖立，拍案叫绝。</p><h2 id="3-有趣的对话系统"><a href="#3-有趣的对话系统" class="headerlink" title="3. 有趣的对话系统"></a>3. 有趣的对话系统</h2><p>游戏中的对话系统允许玩家对同一对话选择不同的回应方式，这些选择有时会产生完全不一样的反应。这会玩家带来多样的体验，鼓励玩家多周目重复游玩，探索不同的对话分支。对话系统还具有时间限制，这种即时对话的机制更显紧张与真实，增加了对话系统的沉浸感与参与感。玩家甚至还有通过红色选项打断对方的选择，让那些不喜欢看剧情或赶时间的玩家能够以一种自然的方式跳过对话。另外，游戏里的隐藏关卡医生boss就是需要在多个对话中打断医生从而解锁的。</p><h2 id="4-玩家选择影响剧情"><a href="#4-玩家选择影响剧情" class="headerlink" title="4. 玩家选择影响剧情"></a>4. 玩家选择影响剧情</h2><p>得益于对话系统，玩家在某些重要的剧情选择不同的对话选项会影响剧情走向与人物关系。比如在第二章酒店中，进入时与前台的接待员小姐姐的对话可能会改变出来时的对话，甚至影响她是否会在事件结束后存活。假设她存活下来，那么在第十章地堡中她会再次出现，这次的对话与前面在酒店的对话是有关联的。<br><img src="https://s2.loli.net/2024/06/06/TuRDWQw5ArKln8x.png" alt="地堡中的接待员"><br>但如果在酒店中惹怒了接待员从而导致她“被清除”，那么在地堡迎接Zero的将是一个无聊的光头大叔。<br><img src="https://s2.loli.net/2024/06/06/HoNwdmvuiY2cF7E.png" alt="地堡中的光头大叔"></p><h2 id="5-伏笔、彩蛋与黑色幽默"><a href="#5-伏笔、彩蛋与黑色幽默" class="headerlink" title="5. 伏笔、彩蛋与黑色幽默"></a>5. 伏笔、彩蛋与黑色幽默</h2><p>在剧情推进过程中，游戏埋下了不少伏笔，有一些伏笔在后面被回收，有一些则至今仍然是个谜（也许要等DLC才能解开了）。例如在第一章末尾Zero家隔壁邻居三个人在开party，到了第二章变成两个人看电视，第三章又变成两个人嗑嗨了躺在沙发上和地上，而第四章录像带里这两个邻居被V杀掉了，此后隔壁再没有动静。又如前两章有多处敌人之间的对话环节，玩家等待听取这些对话会了解到有一个叫泰大壮的人，在第三章会遇到泰大壮并杀死他。游戏中最大的一个伏笔在于每天Zero都会做的梦里，每天这个梦都会多揭示一点内容，玩家在这个过程中会不断猜测Zero在里面扮演了何种角色，直至游戏最后才会解开谜底。这些伏笔的存在给游戏的剧情增添了许多悬疑色彩，提高了故事的吸引力与深度。</p><p>游戏中还添加了许多彩蛋，如第一章抚摸猫咪五次可以解锁成就，第五章听完机器人的对话它会因为错误而爆炸等，另外游戏内还有五个隐藏的武器可供玩家更换，这些彩蛋使游戏变得十分有趣，亦增加了游戏的可探索性以及玩家重复游玩的欲望。</p><p>游戏的主要剧情虽然以杀戮为主，但也不乏无厘头与黑色幽默之处，我个人印象最深刻的一处在第十一章中。在此前，玩家会遇到很多手持枪械的远程敌人，他们给玩家造成了许多麻烦。这章中玩家能捡到一把手枪，正当玩家想要以他们一样的方式报复回去的时候却发现Zero使用这把枪的方式居然是扔出去，就像花盆和啤酒瓶一样，不禁让人莞尔一笑。<br><img src="https://s2.loli.net/2024/06/06/E2SYmLs5nij6vkp.png" alt="扔出手枪砸死敌人XD"></p><h1 id="三、美术风格、场景细节、特效与UI"><a href="#三、美术风格、场景细节、特效与UI" class="headerlink" title="三、美术风格、场景细节、特效与UI"></a>三、美术风格、场景细节、特效与UI</h1><p>美术在一个游戏中起着至关重要的作用，一款游戏的美术风格会决定它在玩家眼中的第一印象。出色的美术设计不仅可以迅速吸引玩家的关注和兴趣，同时也是游戏世界观、环境氛围与情感传达的重要途径。在这一方面，Katana Zero显然十分出色。</p><h2 id="1-像素艺术的美术风格"><a href="#1-像素艺术的美术风格" class="headerlink" title="1. 像素艺术的美术风格"></a>1. 像素艺术的美术风格</h2><p>游戏以高质量的像素艺术风格，内容充满复古未来主义，色彩丰富但不杂乱，对细节的描绘也十分精细。游戏中的光效出色，如医生办公室的场景中壁炉的火焰、墙上的灯都有光影效果。在视觉设计上，Katana Zero使用了大量霓虹灯元素和阴暗的色调，营造出一种神秘而冷酷的反乌托邦氛围。在动作设计方面，各角色的动作动画非常流畅，战斗场景动态十足，特别是主角流畅的跳跃翻滚动作、攻击时剑刃的动画与击杀敌人血液迸溅的动画极大地增强了游戏的打击感，给玩家以强烈的动作反馈，令人印象深刻。<br><img src="https://s2.loli.net/2024/06/06/GFMsdzNwrlubSVA.gif" alt="流畅的动作和特效"></p><h2 id="2-丰富的场景细节"><a href="#2-丰富的场景细节" class="headerlink" title="2. 丰富的场景细节"></a>2. 丰富的场景细节</h2><p>Katana Zero的场景中有及其丰富的细节，这些细节有的结合游戏内当下发生的故事，有的则紧密的贴合游戏的世界观。例如在第六章结尾，主角与两个老兵喝过酒之后整个屏幕都变得摇摇晃晃。又如第九章屠宰场内，玩家可以看到两个敌人在联系拳击。像这样的细节在游戏中比比皆是，它们带给玩家深度的沉浸感，提升了整体游戏体验。除此之外，大量的细节也具有提升多周目重复游玩乐趣的效果，我在某次重玩的时候就注意到原来第一章的墙上就有后面的boss嘟嘴先生的画像，这令我十分惊喜。<br><img src="https://s2.loli.net/2024/06/06/OH8KWd1FLjsbIXo.png" alt="嘟嘴先生的画像"></p><h2 id="3-优秀的特效表现"><a href="#3-优秀的特效表现" class="headerlink" title="3. 优秀的特效表现"></a>3. 优秀的特效表现</h2><p>特效设计是Katana Zero成功的重要因素之一。通过慢动作时屏幕边缘出现的扭曲和拖影效果、爆炸时出现的火光和四散的碎片效果、Zero记忆出现缺失时的CRT显示器故障特效，Katana Zero为玩家呈现了极具表现力的游戏画面。另外值得一提的是，在对话中游戏使用改变颜色、使文字扭曲飘动等多种细节，吸引玩家的注意力，良好地传递了游戏角色对话中想要表达的情感，增强玩家游玩时的情感体验与沉浸感。这种表达方式很少在其他游戏中见到，非常具有新鲜感。<br><img src="https://s2.loli.net/2024/06/06/FNylpAkB4xw1ezZ.gif" alt="对话系统中的特效"></p><h2 id="4-别出心裁的UI设计"><a href="#4-别出心裁的UI设计" class="headerlink" title="4. 别出心裁的UI设计"></a>4. 别出心裁的UI设计</h2><p>Kanata Zero的故事里充满与时间有关的元素，在UI设计这一方面，制作组别出心裁地找到了录像与时间的联系，以此为出发点设计了颇具风格的UI。游戏在标题界面即出现了CRT显示器以及霓虹灯元素，载入存档界面有显示器、录像带与契合主角特点的武士刀、可乐罐、披萨盒等元素，而设定界面和游戏中的ESC菜单则是经典的蓝底白字，这些元素与游戏玩法特点联系紧密，十分符合整体的复古未来主义世界观与新黑色电影风格。这种UI设计避免了美术风格杂乱无章导致降低玩家沉浸感的问题，使游戏各部分在视觉上更加一致，提升了整体的视觉美感。<br><img src="https://s2.loli.net/2024/06/06/cHWtAvOzxy78BlZ.png" alt="存档载入界面"></p><p>在游戏各个关卡场景内，HUD显示于屏幕上方狭窄的条形区域内，并且与画面无缝整合，避免了突兀感，不至于分散玩家过多的注意力。HUD的设计依然与画面上其他元素风格一致，并且十分简洁，包含了游戏全部的必要信息（特殊能力计量条、关卡剩余时间、武器操作信息）而并没有任何其他的冗余信息。另外，在第八章可操控角色变为龙王后，HUD的配色也从灰色花纹+蓝紫霓虹色主题色变成了与角色主要颜色相一致的暗红色花纹+黄色主题色，强化了剧情的沉浸感与玩家的体验感。<br><img src="https://s2.loli.net/2024/06/08/Yw3QsigDVAESX14.png" alt="龙王的UI"></p><h1 id="四、音乐与音效"><a href="#四、音乐与音效" class="headerlink" title="四、音乐与音效"></a>四、音乐与音效</h1><h2 id="音乐"><a href="#音乐" class="headerlink" title="音乐"></a>音乐</h2><p>每个玩家在评价一款游戏时，都会讲述一套关于这个游戏好玩或不好玩的理论，然而，其实驱动他们做出这些结论的依据其实是游戏过程中获得的情感体验。在游戏设计领域，我们可以利用类似“吊桥效应”的心理学原理，通过音乐和音效激发玩家的情感，并使玩家将这种情感扩大到整个游戏上面，创造优秀的游戏体验。</p><p>Katana Zero的音乐由LudoWic和Bill Kiley操刀，大部分是复古的电子合成器音乐，小部分则是由钢琴和吉他演奏的古典风格，呈现出一种时而具有未来感，时而怀旧的氛围，这些与游戏的复古未来主义风格完美契合。每个关卡的音乐都随着场景和剧情的变化进行调整，极大增强了玩家的沉浸感。在战斗场景中，快节奏的电子音乐提升了紧张感与兴奋度，而在叙事场景中，缓慢而深沉的音乐则引导玩家将情感投入到剧情的发展中，强化了叙事的情感深度。</p><h2 id="音效"><a href="#音效" class="headerlink" title="音效"></a>音效</h2><p>对Katana Zero这样一款动作游戏来说，音效是战斗打击反馈的一个重要部分。主角挥刀攻击时的破风声音听起来十分有力，击中敌人之后刀刃切割肉体和血液喷溅的声音与砍到敌人手里的刀具或反弹子弹的金属碰撞声都恰到好处，增强了游戏的打击感。游戏的环境音效也十分逼真，无论是雨水的淅沥声、人群的嘈杂声还是实验室里机器运作的电流嗡嗡声都能使玩家身临其境。另外，在与物品进行交互的时候会有短促的音效提示，以确保玩家明确自己的操作，而对话系统中提示音则增强了对话中的节奏感与交互感。游戏中还有一些特殊的音效，比如在医生给主角注射药物时，音乐也会变得低沉而缓慢，就好像时间的流逝停滞了一样，正好符合游戏世界观内的相应内容。</p><p>我最喜欢的一处音效的应用在第二章，当乔什·罗斯从阳台跳下自杀后，镜头并未跟随他下降，而是由音效给出了一个“嘭”之后接上警笛声。这种利用简单的音效来激发玩家的想象力从而达到叙事目的的手段令我十分惊喜，我认为这种叙事效果比给出尸体惨状与救护车到来的画面要更好。</p><h1 id="五、缺点"><a href="#五、缺点" class="headerlink" title="五、缺点"></a>五、缺点</h1><p>尽管Katana Zero优点显著，但游戏仍存在一些不足之处。</p><h2 id="1-叙事时间线略显混乱"><a href="#1-叙事时间线略显混乱" class="headerlink" title="1. 叙事时间线略显混乱"></a>1. 叙事时间线略显混乱</h2><p>虽然游戏是刻意使用倒序插叙等复杂的叙事手法，但在整体的叙事结构上还是过于松散。由于是以主角Zero为主要视角叙事，而由于注射药物的问题导致Zero的记忆存在大量的闪回和断片，玩家在游玩过程中有时很难分清哪一段是回忆或幻觉，哪一段是现实，导致一些玩家在理解剧情的过程中感到困惑，甚至只游玩一周目无法完全理解全部剧情，这也许会导致这些玩家对该作品评价降低。</p><h2 id="2-游戏内容较短"><a href="#2-游戏内容较短" class="headerlink" title="2. 游戏内容较短"></a>2. 游戏内容较短</h2><p>尽管游戏的剧情比较紧凑，但对于多数玩家来说4到5小时的游戏时间也足以完成主线剧情，在这之后只有重新体验剧情与速攻模式挑战极限两种选择，影响了游戏的重玩价值。并且在游戏剧情中尚存在未回收的伏笔与交代比较模糊的地方，若是能通过DLC补全内容则会好得多。</p><h2 id="3-操纵手感不够流畅"><a href="#3-操纵手感不够流畅" class="headerlink" title="3. 操纵手感不够流畅"></a>3. 操纵手感不够流畅</h2><p>主角的移动从静止到全速的过程稍长，而全速奔跑时速度又比较快，对于不够熟练的玩家来说精准控制角色移动比较困难。角色的攻击其实是有内置CD的，但这一机制的表现不是很明显，有时会令玩家感到困惑。还有部分玩家反映游戏以鼠标准星方向为攻击方向的操作方式与其他2D平台游戏差别较大，难以适应。另外，在默认键位下角色移动要使用S+D，在有楼梯的地方往往玩家想要的效果是翻滚而实际会变成下楼的动作，若使用游戏内自带的独立的翻滚键，则键位安排又会成为一个问题，这一问题也许用手柄进行游戏可以解决，但对于键盘玩家就十分不友好了。</p>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计的三种理论</title>
      <link href="2023/06/27/you-xi-she-ji-de-san-chong-li-lun/"/>
      <url>2023/06/27/you-xi-she-ji-de-san-chong-li-lun/</url>
      
        <content type="html"><![CDATA[<h1 id="总括"><a href="#总括" class="headerlink" title="总括"></a>总括</h1><p>在设计或分析游戏时，有三种常用的理论，他们分别是：</p><ol><li>MDA理论：Mechanics（机制）、Dynamics（动态）、Aesthetics（美学）</li><li>GMT理论：Goals（目标）、Means（方法）、Tools（工具）</li><li>TMV理论：Target（目标）、Mechanics（机制）、Verification（验证）</li></ol><h1 id="1-MDA理论"><a href="#1-MDA理论" class="headerlink" title="1. MDA理论"></a>1. MDA理论</h1><p>MDA是一种游戏的分析研究框架，它将游戏拆解为不同的组件，从而将游戏设计过程和方法系统化、标准化。</p><h2 id="M（Mechanics）"><a href="#M（Mechanics）" class="headerlink" title="M（Mechanics）"></a>M（Mechanics）</h2><p><strong>机制</strong>，指游戏中的基本组件，包括<strong>规则、算法和数据</strong>。举例来说，按下空格角色跳起就是一种机制，一次攻击经过公式计算后对敌人造成一定伤害也是一种机制。</p><h2 id="D（Dynamics）"><a href="#D（Dynamics）" class="headerlink" title="D（Dynamics）"></a>D（Dynamics）</h2><p><strong>动态</strong>，指游戏中的运行时行为，即<strong>玩家与游戏系统之间的互动</strong>。这是模型中最重要的部分，设计师与玩家之间通过这一部分进行交互。玩家通过此部分感受设计师希望通过机制带来的体验，设计师通过这部分获得玩家体验的反馈从而调整游戏机制。</p><h2 id="A（Aesthetics）"><a href="#A（Aesthetics）" class="headerlink" title="A（Aesthetics）"></a>A（Aesthetics）</h2><p><strong>美学</strong>，指玩家在游戏中的<strong>体验和感受</strong>，包括情感、挑战、幻想、探索等方面。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>MDA模型本身并没有评判游戏好坏的能力，这个模型更多的是作为一个<strong>调整和分析</strong>的思路，对于动态部分是设计师需要重点关注的，MDA模型可以让设计师从收集到的反馈和设计的游戏机制之间找到需要调整的部分。</p><p>MDA模型也可用于<strong>指导设计</strong>，它给设计师提供了<strong>自顶向下</strong>和<strong>自底向上</strong>两条思路。前一条从玩家体验触发，从想给玩家带来的美学出发，向下推导出需要的游戏机制，第二种是从现成的游戏机制出发，通过不同的游戏动态效果，推导出最合适的给玩家带来的游戏美学。</p><h1 id="2-GMT理论"><a href="#2-GMT理论" class="headerlink" title="2. GMT理论"></a>2. GMT理论</h1><p>GMT理论的主要目的和用途是预防和应对设计过程中的几种常见问题：</p><ul><li>混淆不同目标</li><li>把手段当作目标</li><li>手段和目标间没有逻辑关系</li></ul><h2 id="G（Goals）"><a href="#G（Goals）" class="headerlink" title="G（Goals）"></a>G（Goals）</h2><p><strong>目标</strong>，指某个主体希望通过某种途径达到的结果和目的。玩家目标、体验目标、设计目标，是3个完全不同的概念。</p><p><strong>玩家目标</strong>：玩家在游戏设置的情境中被要求达成的结果，或玩家自发地给自己规定的目标。</p><p><strong>体验目标</strong>：游戏设计师期望玩家通过游戏体验到的感官，心理和情感反馈。</p><p><strong>设计目标</strong>：游戏设计师期望通过具体的设计手法和内容而达到的特定设计/产品效果。</p><p>这三者中，设计目标可以服务于体验目标与玩家目标；玩家目标可以帮助达成体验目标。但是，这三者之间也可以是毫无关联的。例如，RocketLeague（火箭联盟）的玩家目标是获得胜利；体验目标是感受对抗的刺激感和流畅操作的快感；设计目标是在竞技类游戏领域做出创新，把赛车与足球结合创造新奇的竞技模式。</p><h2 id="M（Means）"><a href="#M（Means）" class="headerlink" title="M（Means）"></a>M（Means）</h2><p><strong>手段</strong>：达成目标的主要高阶手段（操作，思维，设计维度。）</p><h2 id="T（Tools）"><a href="#T（Tools）" class="headerlink" title="T（Tools）"></a>T（Tools）</h2><p><strong>工具</strong>：将手段细化之后的具体可执行低阶要素（设计师角度）或实际可交互，可感知低阶要素（玩家角度。）</p><p>对于不同的游戏，M-T的分解需要结合具体情况。</p><h2 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h2><p>在实践中，设计者应参考以下步骤使用GMT理论：</p><ol><li>定义目标，包括<strong>玩家目标</strong>、<strong>体验目标</strong>和<strong>设计目标</strong>。</li><li>确定实现目标的手段。</li><li>选择实现手段的工具。</li><li>实施与评估，若结果不符合预期，则需根据GMT理论重新选择目标、手段和工具。</li></ol><h3 id="玩家GMT的推导方式："><a href="#玩家GMT的推导方式：" class="headerlink" title="玩家GMT的推导方式："></a>玩家GMT的推导方式：</h3><p><strong>自上而下G–M–T</strong></p><ul><li>先从设定一个玩家目标出发</li><li>通常源于满足特定玩法机制和规则，以及品类固有特征和可玩内容的需要</li><li>逐步拆解为合适的/理想的/符合需要和标准的M，和T</li></ul><p><strong>自下而上T/M–G</strong></p><ul><li>先从特定的工具或者手段出发</li><li>通常源于对特定的设计要素，规则和玩法机制的探索</li><li>然后从工具和手段层面反推合适的玩家目标</li></ul><h3 id="体验GMT的推导方式："><a href="#体验GMT的推导方式：" class="headerlink" title="体验GMT的推导方式："></a>体验GMT的推导方式：</h3><p><strong>自上而下G–M–T</strong></p><ul><li>先从体验目标出发</li><li>通常源于实现特定体验目标，用户故事，市场需求的需要</li><li>逐步拆解为合适的/理想的/符合需要和标准的M，和T</li></ul><p><strong>自下而上T/M–G</strong></p><ul><li>先从特定的工具或者手段出发（比如某种美术风格/主线故事/世界观）</li><li>通常为了确保使用特定的手段和工具，因为相信它们会赋予产品最核心的价值和竞争力</li><li>然后从工具和手段层面反推合适的体验目标</li></ul><h1 id="3-TMV理论"><a href="#3-TMV理论" class="headerlink" title="3. TMV理论"></a>3. TMV理论</h1><p>TMV理论包含：<strong>Target（目的）</strong>、<strong>Mechanics（机制）</strong>、<strong>Verification（验证）</strong>。</p><p>TMV理论旨在通过整合MDA理论和GMT理论，优化设计思路，以实现设计目的。首先，确定游戏产品的设计意图，然后提出设计方案，进而制定游戏机制等具体设计内容。第三步，对游戏的核心体验、商业效果等进行实际验证，根据验证反馈，调整设计方案，不断打磨优化游戏产品。TMV理论更多的是对游戏设计提出了系统化、工程化的思路，相比MDA和GMT更加具备实践意义。在游戏拆解意义上，提供了对于游戏产品化的理解。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><a href="https://zhuanlan.zhihu.com/p/630626214">【游戏设计-游戏拆解】P1 游戏拆解导论</a></li><li><a href="https://zhuanlan.zhihu.com/p/82577774">MDA模型：游戏设计的重要理论</a></li><li><a href="https://zhuanlan.zhihu.com/p/329912608">游戏设计必备逻辑思路：玩家、体验、设计三种不同目标和GMT理论</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《体验引擎：游戏设计全景探秘》阅读笔记（四）</title>
      <link href="2022/12/23/ti-yan-yin-qing-you-xi-she-ji-quan-jing-tan-mi-yue-du-bi-ji-si/"/>
      <url>2022/12/23/ti-yan-yin-qing-you-xi-she-ji-quan-jing-tan-mi-yue-du-bi-ji-si/</url>
      
        <content type="html"><![CDATA[<h1 id="第四章-故事"><a href="#第四章-故事" class="headerlink" title="第四章 故事"></a>第四章 故事</h1><p>游戏与电影有相似之处，游戏剧情也参考剧本的<font color="red"><u>三幕式结构</u></font>。三幕式结构指的是把一个剧本的情节分为基础介绍，故事核心，以及高潮结局三个部分。</p><p>游戏开发过程可以分解为前期、研发和后期。</p><p>但游戏和电影的工作机制实际上截然不同，电影可以教给我们使用屏幕的方法（取景和构图、场景构建、剧本节奏、视觉效果等），但是电影不会教我们如何交互、如何做出决定，以及体验那种身临其境的感觉。所以，大量从电影中借鉴方法其实是有风险的，因为这样做有可能会让我们忽略游戏的故事所具有的强有力的挑战和机会。</p><p>当我们苦苦寻觅和故事有关的工具时，身边这些具有交互形式的事物：博物馆、美术馆、真实空间以及生活等，应该是我们最初的检验标准。这些古老的形式指出了最基本的挑战：根据玩家的选择来创作、修改和重新塑造一个故事，让它能够深化玩家所做的每一件事的意义。</p><h2 id="故事叙述工具"><a href="#故事叙述工具" class="headerlink" title="故事叙述工具"></a>故事叙述工具</h2><p>故事叙述工具是一种能够在玩家的脑海中形成故事情节的装置。</p><p>大多数故事性的媒体所使用的工具都极其有限，而游戏的可选项要多得多。游戏中可以：</p><ol><li>使用预先定制的图像和声音。</li><li>使用文字。</li><li>放置一些可以让玩家翻阅的画面。</li><li>创造一个可以让玩家探索的空间。</li></ol><p>游戏还有一些独有的工具，我们可以创造一些机制，能够根据玩家的决策和反应随意地创造剧情、角色，甚至是主题。</p><p>我们叙述故事的工具可以粗略地分成三个类别：<font color="red"><u>脚本故事（scripted story）、世界性故事（worldnarrative），以及浮现的故事（emergent story）。</u></font></p><h2 id="脚本故事"><a href="#脚本故事" class="headerlink" title="脚本故事"></a>脚本故事</h2><p>脚本故事指的是那些嵌入游戏的事件，并且他们总是以相同的方式展示。</p><p>脚本故事最基本的工具是<font color="red"><u>过场动画</u></font>，可以在其中使用所有从电影中学到的技巧。但过场动画会屏蔽所有的交互行为，破坏游戏流程。</p><h3 id="软脚本"><a href="#软脚本" class="headerlink" title="软脚本"></a>软脚本</h3><p><font color="red"><u>脚本序列</u></font>是一种加入了少许控制的脚本故事。它在播放事先制作好的事件时，不会完全屏蔽与玩家交互的界面。</p>]]></content>
      
      
      <categories>
          
          <category> 阅读笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 体验引擎：游戏设计全景探秘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《体验引擎：游戏设计全景探秘》阅读笔记（三）</title>
      <link href="2022/12/19/ti-yan-yin-qing-you-xi-she-ji-quan-jing-tan-mi-yue-du-bi-ji-san/"/>
      <url>2022/12/19/ti-yan-yin-qing-you-xi-she-ji-quan-jing-tan-mi-yue-du-bi-ji-san/</url>
      
        <content type="html"><![CDATA[<h1 id="第三章-技巧"><a href="#第三章-技巧" class="headerlink" title="第三章 技巧"></a>第三章 技巧</h1><p>挑战可以带来竞争的紧张感，以及胜利的喜悦。它能够让人全神贯注并为之着迷地思考对策，获得不同寻常的经验。挑战也可以通过击败或者帮助他人而产生社交体验。但是，任何具有挑战性的游戏（事实上大多数游戏都有挑战性）都必须考虑玩家技巧这个问题。如果挑战的难度太大，玩家会感到沮丧，而太容易则又会让人觉得无聊。</p><p>能够产生心流的优秀体验就存在于这两个极端之间的<font color="red"><u>“古迪洛克地带”（Goldilocks zone）</u></font>。也称<fon t="" color="red"><u>适居带（Habitable zone）</u>，指的是适合生命繁衍生息的区域。</fon></p><p>技巧性的处理意味着需要理解技巧性的上限和下限。如果游戏超过了技巧性上限，就会导致游戏的挫败感太强，但是如果低于技巧性下限的话，游戏则会变得十分无聊。</p><h2 id="深度"><a href="#深度" class="headerlink" title="深度"></a>深度</h2><p>深度游戏能够通过高水平的技巧创造有意义的玩法。</p><p><font color="red"><u>深度（depth）</u></font>这个概念用于描述游戏中需要学习的内容有多少。</p><p>一个游戏的技巧上限指的是技巧的级别已经达到无法再进一步改进的程度。如果这个技巧的级别超越了人类的极限，这个游戏就是一个无止境的、不能被任何人完全掌握的深度游戏。</p><p>并不是所有的游戏都必须具有无止境的深度，比如《刺客信条2》的设计师认为，美感和无障碍比单纯的追求深度更重要。</p><h2 id="无障碍"><a href="#无障碍" class="headerlink" title="无障碍"></a>无障碍</h2><p>无障碍游戏对技巧的要求较低。一个游戏的<font color="red"><u>技巧障碍（skill barrier）</u></font>是指玩这个游戏必须掌握的基础技巧。</p><p>游戏设计师经常低估无障碍的重要性，因为我们都是老玩家，因此不会留意游戏的技巧障碍。然而有太多的潜在玩家，只要他们知道怎么玩的话，他们是很乐意参与进来的。这值得我们做一些事情，以便让更多的潜在玩家能够参与进来。</p><h2 id="技巧范围"><a href="#技巧范围" class="headerlink" title="技巧范围"></a>技巧范围</h2><p><font color="red"><u>技巧范围（skill range）</u></font>指的是一个游戏展现其挑战性所需要的技巧级别的范围。</p><p>宽泛的技巧范围意味着一个游戏可以让初学者和专家都觉得好玩，这种游戏很容易上手却很难精通。相对的，一个狭窄的技巧范围则说明玩家一旦掌握该游戏的玩法就可以很快地精通。也就是说，要么知道它的全部，要么对它一无所知。</p><p><img src="https://s2.loli.net/2022/01/03/4CUMsVDjOzP2RyW.jpg"></p><p>宽泛的技巧范围并非必须，如果游戏侧重于画面和剧情，就不需要宽泛的技巧范围。</p><h3 id="没有明确目标的技巧"><a href="#没有明确目标的技巧" class="headerlink" title="没有明确目标的技巧"></a>没有明确目标的技巧</h3><p>有些游戏并没有明确的目标，与其说这类作品是游戏，倒不如说它们是“玩具”。</p><p>得到一个“玩具”后，多数情况下玩家会自己设置一个目标。</p><p>即使那些没有明确目标的“玩具”，也能够通过表达一些有趣和不明显的，同时可以学到的特性而获益，即便“玩具”也是可以有深度的。</p><h2 id="技巧范围的延伸"><a href="#技巧范围的延伸" class="headerlink" title="技巧范围的延伸"></a>技巧范围的延伸</h2><p>扩展技巧范围的最好方法是设计一种<u>简单而优雅</u>的系统。通过从游戏机制中剔除所有深度的内容，我们可以交付一个轻量级的游戏，它简单易学，但是难以精通。这也是优雅的设计值得我们付出努力的一个关键原因。</p><p>除此之外，以下是几种可以扩展游戏的技巧范围的方法：</p><h3 id="自我再造（Reinvention）"><a href="#自我再造（Reinvention）" class="headerlink" title="自我再造（Reinvention）"></a>自我再造（Reinvention）</h3><p>随着玩家技巧的提升，游戏会不断地进行<u>自我再造</u>扩展其技巧范围。</p><p>根据技巧范围的不同，游戏往往会经历三种典型的再造阶段：手动阶段（manual）、情景阶段（situa-tional），以及心理阶段（mental）。</p><p>在<u>手动再造</u>这个阶段，你所面临的挑战都是一些简单和每时每刻都需要的操作技巧。也就是说，手动再造就是了解游戏界面的阶段，所有的游戏都会从这个阶段开始。</p><p>在<u>情景再造</u>这个阶段，挑战已经不再是掌握如何射击这样的事情，而是需要掌握何时射击和目标是谁，或者是懂得把什么单位移动到什么地方。这个阶段的内容包括：状况感知能力、阅读比赛格局、了解反击策略，以及其他一些中等级别的游戏技巧。</p><p>技巧发展到<u>心理阶段</u>的情况并不常见，并且这个阶段只属于那些专家，以及具有竞争力和敬业的玩家。心理技巧就是预判和操纵对方的思想，同时不让对方预判和操纵自己的思想。大多数拥有无止境深度的游戏最终都会进入这种扑克牌似的终极状态，这也是为什么大多数无止境的游戏都是多人游戏的原因：因为你几乎能够掌握任何游戏系统，但是你永远无法完全理解另一个人的思想。</p><h3 id="弹性挑战（Elastic-Challenge）"><a href="#弹性挑战（Elastic-Challenge）" class="headerlink" title="弹性挑战（Elastic Challenge）"></a>弹性挑战（Elastic Challenge）</h3><p>弹性挑战允许不同程度的成功或者失败，因此为不同技巧范围的玩家提供了相匹配的挑战。</p><p>弹性挑战通过设置不同级别的成功或者失败来解决这个问题。由于存在不同程度的成功，游戏的技巧范围变得更加宽泛，因为每个人都有可达到且同时具有挑战性的目标。</p><p>如果《Hitman》只是一个杀死指定目标的游戏，它就和普通的射击游戏没有什么区别。如果它要求最完美的刺杀才能过关，那么对于大多数人来说难度又太高了。通过识别和奖励玩家所表现出的不同程度的隐蔽性和聪明才智（评价系统），弹性挑战使设计师能完美结合两者所具有的优势。</p><p>正如我们可以体现不同程度的成功那样，我们也可以体现不同程度的失败。</p><p>成功和失败的幅度可以弹性地向上或向下延伸出常规的范围，而不是直接宣布胜利或失败后结束游戏。我们对游戏的弹性范围所做的每一次扩展都意味着另一个玩家群体从此不再遭遇令人沮丧的失败，以及不会过于轻松地达到技巧上限。</p><h3 id="训练"><a href="#训练" class="headerlink" title="训练"></a>训练</h3><p>训练系统能够帮助玩家更快地通过技巧障碍。游戏中提供的教程、文字信息、声音提示，以及各种暗示都是出于此种目的。</p><p>好的训练方式是潜移默化式的。最好的训练方式是在玩家没有觉察到的情况下进行教导。</p><p>以下是几种好的训练方式：</p><ol><li>将训练融入到背景故事中</li><li>把训练内容转变为弹性挑战</li><li>允许玩家自己决定是否跳过训练内容</li><li>通过对玩家的测试决定展现哪些训练内容</li><li>适应性的训练方式（只有在察觉到玩家缺少某种知识的时候，教学内容才会出现）</li></ol><h3 id="情感维持"><a href="#情感维持" class="headerlink" title="情感维持"></a>情感维持</h3><p>如果不想让玩家在越过技巧障碍之前就放弃游戏，我们可以利用一些不需要技巧的情感触发器让他们体验某些能够维持的情感。</p><h3 id="改变难度"><a href="#改变难度" class="headerlink" title="改变难度"></a>改变难度</h3><p>改变难度意味着改变整个游戏的挑战级别。在技巧范围的图中，对应的效果就是向左或者向右平移整个范围。</p><p>几种改变难度的方法：</p><ol><li>显式的难度选择会询问玩家想要哪种难度。</li><li>适应性的难度会根据玩家的水平悄悄地调整游戏难度。适应性的难度只适用于那些并不希望玩家挑战最高难度的游戏。</li><li> 隐式的难度选择允许玩家通过战略性决策来调整挑战的级别。</li></ol><h2 id="处理失败"><a href="#处理失败" class="headerlink" title="处理失败"></a>处理失败</h2><p>不要因为失败而惩罚玩家。找一些其他的办法来产生紧张感。比如：对游戏角色动点手脚（击毙游戏主角，让他遭受离婚、穷困潦倒、刺伤、焚烧，或者通过无数种其他的方法来折磨他），不让玩家获得成功或者制造一些小挫折（失去一些资源或者一个同伴，错过一段剧情，或者无法得到一些信息）。</p><h3 id="失败陷阱"><a href="#失败陷阱" class="headerlink" title="失败陷阱"></a>失败陷阱</h3><p><font color="red"><u>失败陷阱</u></font>指的是玩家长时间停留在某种肯定会失败的状况。</p><p>对于失败陷阱有多种解决方案，需要根据其出现的方式及原因来制订解决方案。</p><ol><li>弹性的失败条件。</li><li>直接结束游戏来绕过失败陷阱。</li><li>单人游戏解决失败陷阱的方法是，给予玩家提示让他们知道自己被卡住了，同时悄悄调整游戏难度，或者给出另外一个替代的挑战。</li></ol><p>并不是每一种失败陷阱都有完美的解决方案，有些失败陷阱已经深深地融入在游戏设计中，根本不可避免。比如，在赛车和体育游戏中，没有人可以解决由于落后太多而导致毫无斗志的情况。</p>]]></content>
      
      
      <categories>
          
          <category> 阅读笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 体验引擎：游戏设计全景探秘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《体验引擎：游戏设计全景探秘》阅读笔记（二）</title>
      <link href="2022/12/12/ti-yan-yin-qing-you-xi-she-ji-quan-jing-tan-mi-yue-du-bi-ji-er/"/>
      <url>2022/12/12/ti-yan-yin-qing-you-xi-she-ji-quan-jing-tan-mi-yue-du-bi-ji-er/</url>
      
        <content type="html"><![CDATA[<p><font color="red" size="7"> 第二部分 游戏制作</font></p><blockquote><p>我们并不能通过一本书而精通游戏设计，因为游戏设计需要经验的积累。</p><p>学习游戏设计的最佳方法是，研究那些细微的和独立的改变所产生的效果。</p></blockquote><h1 id="第二章-优雅"><a href="#第二章-优雅" class="headerlink" title="第二章 优雅"></a>第二章 优雅</h1><blockquote><p>从某种程度而言，所有游戏早已存在于世界之中。它们就在那里，隐藏在宇宙万物的逻辑之中。我们并没有创造它们，我们只是发现了它们，就像雕塑家在一块大理石中发现雕像那样：并不需要增加什么，而是通过去掉多余的材质，展现其真正面貌。</p><p>良好的游戏设计意味着最大化情感力量和多样的游戏体验，同时最小化玩家的理解成本和游戏开发成本。这种高效的形式我们称之为<font color="red"><u>“优雅”（elegance）</u></font>。</p></blockquote><h2 id="浮现的优雅"><a href="#浮现的优雅" class="headerlink" title="浮现的优雅"></a>浮现的优雅</h2><p><font color="red"><u>浮现（emergence）</u></font>指的是通过简单机制的交互而创造出各种复杂情况的时刻。</p><p><font color="red"><u>促进浮现</u></font>指的是精心打造一些游戏机制，这些机制并不是简单叠加在一起，而是能够通过相互作用引发大量可能的体验。</p><p>当各种机制通过复杂并且不明显的方式交互的时候，游戏的设计就会变得优雅。但是这种复杂性和不明显性也使得实现优雅的设计非常困难。</p><h2 id="我喜欢在早晨闻到优雅的味道"><a href="#我喜欢在早晨闻到优雅的味道" class="headerlink" title="我喜欢在早晨闻到优雅的味道"></a>我喜欢在早晨闻到优雅的味道</h2><p><font color="red"><u>嗅出优雅</u></font>虽然是一种需要经验的技巧，但是它还是有一些简单规律可循的。</p><ol><li><b>和多数其他游戏机制交互的那些游戏机制有可能是优雅的。</b>如果这个机制和许多其他机制都有交互，那么它很有可能是优雅的设计。如果它只和一两个机制有交互，那么有可能就不是。</li><li><b>简单的机制有可能是优雅的。</b>优雅意味着减少游戏机制的开销，以及增加游戏机制的收益。简化机制可能意味着会失去游戏中的一些细节，但是也为其他更高效的设计打开了一片想象的空间。通过减少游戏机制的复杂度，玩家反而可以欣赏更多其余的内容。而最有可能是优雅的机制的那些机制都简单得要命，你甚至只消听一遍就能完全明白。</li><li><b>能够以多种方式使用的机制有可能是优雅的。</b>一个具有创意，同时兼具攻击性、防御性、策略性、战术性的工具比只有一种功能的工具更优雅。这么说不仅是因为它有多种交互方式，还因为将这些不同的功能组合在一起，能够为游戏创造出新的选择和联系。</li><li><b>与其他机制作用不重复的那些机制有可能是优雅的。</b><font color="red"><u>作用（role）</u></font>指的是一种使用机制的方式。那些最优雅的机制所具备的功能非常独特，它们会为游戏带来一些全新的玩法。不要总是在已经存在的交互上创造变化，应该寻求一些能够带来新的探索策略或者方向、以前从来没有出现过的机制。</li><li><b>对已建立的用户习惯和界面重复利用的机制可能是优雅的，因为它们利用了玩家已经掌握的知识。</b>我们可以通过使用玩家已知的符号和习惯来减少其理解游戏的成本。这些习惯可以来自任何地方，比如<u>游戏中的其他系统、其他游戏、现实生活、文化原型</u>等等。只要玩家已经知道这些东西，我们就可以使用它们，并从中获益。每个人都想打破陈规，并且表达自己的创意。但是创造新的习惯不仅会影响设计师，同时也会影响玩家。如果真的要这么做，就必须确保什么时候值得我们这么做，而不是没有任何理由就随意改变一个已经存在的、良好的用户习惯。真正的原创性并非来自于表面细节的改变，而是来自于根基的改变。</li><li><b>和已存在的机制规模相类似的那些机制有可能是优雅的。</b>几乎任何可衡量的数值之间都可以运用这种通过匹配规模而浮现的优雅。诸如<u>大小、速度、面积、生命值、距离、金钱、能量、数据传输、资源、时间、玩家或者角色的数量</u>等，都有可能通过规模匹配而浮现出优雅。</li><li><b>频繁地重复使用的机制有可能是优雅的。</b>同一个游戏机制所带来的体验每一次都不尽相同。机制的这种重复性也是优雅设计的一个基础。重复性并不能保证机制的优雅性，但是如果缺少了重复性，优雅也就无从谈起。</li><li><b>不对游戏内容施加限制的机制有可能是优雅的。</b>一个带有内容局限性的设计能够立即产生让人印象深刻的设计效果，并且在原型开发时也感觉良好，测试时也没有问题，大家对设计都非常满意。这种收益效果是立刻就能看到的，但是背后所付出的开销却要延续长达数年的时间，并且会影响到其他的方面。类似这样的内容局限性有成百上千种之多。比如<u>跳跃的距离、房间的高度、角色的数量、资源的多少、对话的长度、背包的容量，以及车子的尺寸</u>都可能受制于游戏设计方面的限制。 优雅的机制能够在不产生这种隐蔽开销的前提下改善一个游戏。如果一个机制迫使游戏的其他部分必须做出调整的话，即使是一个很好的机制，也不值得我们去实现它。</li><li><b>能够充分利用已有界面表现能力的那些机制有可能是优雅的。</b>但是这样做的危险在于，可能会由于过于敏感的输入方式而让玩家感觉受挫。只有当所有的输入方式对于有经验的玩家来说是有用的，同时大多数输入方式又可以被新手玩家所忽略的时候，这种丰富的操控方法才会运转良好。</li></ol><h2 id="优雅设计案例：掠夺者VS-恶火"><a href="#优雅设计案例：掠夺者VS-恶火" class="headerlink" title="优雅设计案例：掠夺者VS. 恶火"></a>优雅设计案例：掠夺者VS. 恶火</h2><p>《星际争霸2：自由之翼》（StarCraft Ⅱ: Wingsof Liberty）这个游戏中的两个人族单位：掠夺者（Predator）和恶火（Hellion）。</p><p><img src="https://s2.loli.net/2021/12/19/6VyQvNiYhGcmqfr.jpg"></p><p>两者最主要的区别在于攻击范围的形状。虽然它们都可以进行范围攻击，但是掠夺者的攻击范围是以自身为中心的圆形区域，而恶火的攻击范围是一条又长又窄的直线。这一点最终成为了两者之间的巨大区别（如下图所示）。</p><p><img src="https://s2.loli.net/2021/12/19/38FVARXt4BkwTZr.jpg"><img src="https://s2.loli.net/2021/12/19/ANE9HDpi8xXgPzY.jpg"></p><p>掠夺者的使用有几种方法。效果最好的一种是在被敌人包围时使用它，因为这时它的范围性攻击就可攻击到所有的敌人。但是这种情况非常少见，因为其他玩家可以根本就不发起攻击。掠夺者也可以主动攻击大批量的敌人群体，只是大部分敌人都不会被它的圆形攻击波所击中。最后，掠夺者可以冲进一群敌人之中，然后试图利用自己的圆形攻击范围来打击敌人。除了这些以外，掠夺者几乎没有其他好用的方法了。它的攻击范围较小，这意味着它不能躲在其他单位后面发起攻击，也不能攻击位于高处的敌人，并且它和其他友军单位也很少能够形成有效的配合。所以每一次使用掠夺者时，可使用的策略都屈指可数。</p><p>而恶火就不一样了。<u>直线型的攻击范围意味着，攻击效果取决于地形和敌人的排列形状。</u>如果许多小体积的敌人排成一列，那么这种直线型的攻击就会对他们造成巨大的伤害。如果敌人包围了恶火，那么它可能只会击中一个敌人，所造成的伤害几乎可以忽略不计。</p><p>这个简单的区别让两者所带来的体验完全不同。<u>恶火总是跑来跑去，并且攻击位于一条线上的敌人，而对方则会不断试图靠近和包围恶火。</u></p><p>恶火也能很好地利用环境和配合其他的友军单位。由于它能够进行范围攻击，玩家可以把恶火放在墙壁的后面来掩护它，或者把它放在其他单位的后面来配合打击体积小的敌人群体。此外，它还可以从高处对敌人发起攻击。</p><p>最后，恶火的攻击频率比掠夺者要低很多，从而使得恶火在两次攻击之间有足够的时间可以移动。这就为高级战术“边打边跑”提供了前提条件。相比之下，掠夺者的攻击频率就太高了，因而不可能使用这种战术，这完全抹杀了每时每刻的紧张感以及操作的技巧。</p><p><img src="https://s2.loli.net/2021/12/19/oXPeUwdNQ6j3L2W.jpg" title="无法充分利用掩体和同伴"><img src="https://s2.loli.net/2021/12/19/oJHcPTx5Ge7Q2n3.jpg" title="从掩体或同伴后方发起攻击"></p><p>恶火的设计更为优雅，因为它能够比掠夺者带来更多的挑战、战术组合，以及不同的状况。</p><p><strong>优雅并不是那些闪闪发光的小玩意，或者是让人兴奋的设计陷阱。相反，它来自于这些事物的对立面：利用简单朴实的设计浇灌出无数种不同的体验。</strong></p><p><strong>当我们描述一个曾经的最优雅的游戏系统时，它们可能听起来相当的简单，甚至可以说是无趣。但是设计本身的形式并不重要，真正重要的是游戏过程中出现的可能性空间的深度和广度。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 阅读笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 体验引擎：游戏设计全景探秘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《体验引擎：游戏设计全景探秘》阅读笔记（一）</title>
      <link href="2022/12/04/ti-yan-yin-qing-you-xi-she-ji-quan-jing-tan-mi-yue-du-bi-ji-yi/"/>
      <url>2022/12/04/ti-yan-yin-qing-you-xi-she-ji-quan-jing-tan-mi-yue-du-bi-ji-yi/</url>
      
        <content type="html"><![CDATA[<p><font color="red" size="7">第一部分 体验引擎</font></p><blockquote><p>游戏设计既不是存在于游戏的代码、艺术风格和声效里，也不是存在于棋子或棋盘中。游戏设计意味着精心打磨一些规则，而这些规则能够赋予游戏中的事物以灵魂。</p></blockquote><h1 id="第一章-体验引擎"><a href="#第一章-体验引擎" class="headerlink" title="第一章 体验引擎"></a>第一章 体验引擎</h1><h2 id="游戏机制和事件"><a href="#游戏机制和事件" class="headerlink" title="游戏机制和事件"></a>游戏机制和事件</h2><p>游戏是由许多<font color="red"><u>机制（mechanic）</u></font>组成的，这些机制定义了游戏如何运行。</p><p>在游戏中，游戏机制和玩家之间的交互就会产生<font color="red"><u>事件</u></font>。</p><p><font color="red"><u>情感</u></font>是首要因素，事件必须激发某种情感才有意义。</p><p>游戏中的情感绝不只是“有趣”而已。（紧张刺激、恐惧、引人思考、使人产生共鸣等）</p><p>情感触发器：你的潜意识会不断分析你的处境和状况。当达到特定条件的时候，潜意识就会触发相应的情感。</p><p><font color="red"><u>改变</u></font>是所有情感触发器的一个基本原则。为了产生情感，事件必须做出一个有实际意义的改变。但并不是所有的改变都会产生情感。</p><p>事件必须改变一些<u>对人类而言有价值的东西</u>（<font color="red">人类价值（human value）</font>）才能激发情感。</p><p>人类价值的例子：［生命/死亡］、［胜利/失败］、［朋友/陌生人/敌人］、［富有/贫穷］、［地位显赫/地位低下］、［有伴/孤独］、［爱情/矛盾/仇恨］、［自由/奴役］、［危险/安全］、［知识/无知］、［熟练/生疏］、［健康/生病］以及［跟随者/领导者］</p><p>和情感有关的并不是事件本身，而是事件带来的人类价值的改变。被改变的人类价值越重要，改变得越频繁，产生的情感就会越强烈。</p><p>除了改变，参与改变也会出现情感因素。</p><p>显示信息和改变信息所导致的情感其实是一样的，这意味着我们可以不必经常改变人类价值，只要在开始隐藏一部分信息，随着游戏进程慢慢提供给玩家更多的信息，这同样可以激发情感。</p><p><font color="red"><u>情感黑盒</u></font>：我们无法直接感知到情感触发器背后的逻辑。</p><p><font color="red"><u>情感错位</u></font>：尽管不知道为什么会有这样或者那样的情感，我们依然会想当然地为情感分配一个原因，但是我们自己却丝毫没有察觉到这一点。而这些想当然的原因往往是错的。（比如背景音乐的作用）</p><h2 id="基本的情感触发器"><a href="#基本的情感触发器" class="headerlink" title="基本的情感触发器"></a>基本的情感触发器</h2><h3 id="学习引发的情感"><a href="#学习引发的情感" class="headerlink" title="学习引发的情感"></a>学习引发的情感</h3><p>一种知识所包含的人类价值越重要，我们学习它的动力就越大。</p><p>教导玩家进行创造、社交活动，以及战斗的游戏总是最受人们的欢迎。</p><p>一种知识越是复杂和难以掌握，学会它的成就感就越大。</p><p>当玩家得到某些新的信息时，如果他突然明白了原有的一些信息的含义，那么他就是有所领悟。</p><h3 id="角色弧线引发的情感"><a href="#角色弧线引发的情感" class="headerlink" title="角色弧线引发的情感"></a>角色弧线引发的情感</h3><p><font color="red"><u>角色弧线（Character Arc）</u></font>指的是在故事情节发展过程中，角色状态的一系列改变。</p><h3 id="挑战引发的情感"><a href="#挑战引发的情感" class="headerlink" title="挑战引发的情感"></a>挑战引发的情感</h3><p>对技巧和力量的测试可以产生多种情感。当我们努力迎接挑战的时候，会进入到一种快乐的、精神高度集中的状态。</p><p>挑战和游戏的关系是如此紧密，以至于它经常被认为是游戏的一项基本特性。</p><h3 id="社交引发的情感"><a href="#社交引发的情感" class="headerlink" title="社交引发的情感"></a>社交引发的情感</h3><p>炫耀，先建立信任再破坏它，开玩笑，击败陌生人，营救同伴，还有一起完成某种挑战，这些都是游戏设计中常见的社交行为。</p><p>和计算机对弈并获胜的感觉，和与人对弈并获胜的感觉不尽相同，即便每一步棋都一样。这是因为击败真正的人增加了情感上的社交意义。</p><h3 id="财富引发的情感"><a href="#财富引发的情感" class="headerlink" title="财富引发的情感"></a>财富引发的情感</h3><p>获得财富会令人激动不已。</p><p>不止金钱，还包括能提升游戏角色能力的物品。</p><h3 id="音乐引发的情感"><a href="#音乐引发的情感" class="headerlink" title="音乐引发的情感"></a>音乐引发的情感</h3><p>即使主观意识并没有关注音乐，我们的潜意识仍然会将音乐源源不断地转换成对应的情感。</p><p>金属发出的刺耳的声音会让人觉得不舒服，心跳声可以制造悬念，下雨声会让人感觉沉静，在聚会时吹口哨会让人觉得很愚蠢，挤压流体状的东西会让人感到恶心等等。</p><h3 id="场景特效引发的情感"><a href="#场景特效引发的情感" class="headerlink" title="场景特效引发的情感"></a>场景特效引发的情感</h3><p>这类情感缺乏深度而且持续性较短。</p><p>当这些壮观的场景特效能够增强已有情感时，效果往往还是不错的。</p><p>不要滥用场景特效。</p><h3 id="由美而引发的情感"><a href="#由美而引发的情感" class="headerlink" title="由美而引发的情感"></a>由美而引发的情感</h3><p>美并不是一个事物所具有的某种特征，而是事物对我们的影响。即便只是看到美的事物也会让人觉得身心愉悦。</p><p>只有目标明确才能让美的效果最大化。</p><h3 id="环境引发的情感"><a href="#环境引发的情感" class="headerlink" title="环境引发的情感"></a>环境引发的情感</h3><p>人天生喜欢适合于居住的环境。</p><p>人们会偏爱于自己习惯的环境。</p><p>许多游戏都利用环境、天气以及季节，来突出从绝望到极度欢乐等感觉。</p><h3 id="新技术引发的情感"><a href="#新技术引发的情感" class="headerlink" title="新技术引发的情感"></a>新技术引发的情感</h3><p>技术优势经常导致游戏设计质量会暂时的下降。。一部分原因是因为开发者还没有完全掌握这种新技术。然而更重要的是，新技术能够简单地产生情感的承诺反而会埋没原有的创意。</p><p>一个游戏想要持久地获得成功，必须使用新技术给玩家带来前所未体验过的交互和场景。</p><h3 id="原始威胁引发的情感"><a href="#原始威胁引发的情感" class="headerlink" title="原始威胁引发的情感"></a>原始威胁引发的情感</h3><p>腐烂食物，充满细菌的垃圾，蜘蛛，蛇，病人，可怕的伤口……</p><p>多年以来，由这些原始威胁引发肾上腺素分泌的方法被懒惰的电影制片人和游戏设计师滥用，现在人们都已经习惯了这种低劣的手法，以致很多人会直接忽略它们，或者会笑出声来。</p><h3 id="性暗示引发的情感"><a href="#性暗示引发的情感" class="headerlink" title="性暗示引发的情感"></a>性暗示引发的情感</h3><p>过多的随意使用性暗示则会适得其反。不必要的性暗示会破坏游戏氛围，降低一个严谨的故事的可信度，甚至还会激怒形形色色的潜在玩家。</p><p>滥用会降低品味。</p><h2 id="虚构层"><a href="#虚构层" class="headerlink" title="虚构层"></a>虚构层</h2><p>当游戏机制通过虚构的情节包装之后就会具有另一个层面的情感意义。</p><p>当我们为游戏机制套上一层虚构的外衣后，它们就会拥有另一个层面的情感含义。</p><p>有些人经常会天真地认为游戏的全部意义都来自于虚构。这种观点认为，游戏通过为玩家带来一种模拟体验而产生情感，直到游戏世界和现实世界合二为一。设计师埃里克·齐默尔曼（Eric Zimmer-man）将这种观点命名为<font color="red"><u>“沉浸谬论”（immersivefallacy）</u></font>。称之为谬论是因为玩家并没有忘记他们是在玩游戏，虚构也并没有完全取代或者隐藏游戏机制，它只是为游戏机制产生的情感增加了另外一层意义而已。</p><h3 id="虚构和游戏机制的对比"><a href="#虚构和游戏机制的对比" class="headerlink" title="虚构和游戏机制的对比"></a>虚构和游戏机制的对比</h3><p>虚构层通过角色、剧情，以及环境来产生情感。</p><p>虚构本身也有限制。它无法产生竞争、胜利、失去这类的情感，无法为我们带来诸如学会某种技巧的喜悦，也不能和人们进行交互。</p><p>将虚构和游戏机制结合起来就能够产生两者具有的所有情感因素。</p><p>虚构和游戏机制很容易相互影响。</p><p>箱子和其他老套的东西之所以出现了一遍又一遍，是因为它们对游戏机制有益。</p><p>由于虚构和游戏机制之间总是会互相干扰，于是许多游戏会选择重点突出它们中的一个，同时几乎完全忽略掉另一个。</p><p>游戏设计的最高境界是将完美的游戏机制和引人入胜的虚构情节无缝地结合成一个具有深远涵义的系统。</p><p>虚构和游戏机制在游戏设计中不应该是非此即彼的关系，并且不必倚重两者中的任何一个，要把两者完美地结合成一个整体。</p><h3 id="构建体验"><a href="#构建体验" class="headerlink" title="构建体验"></a>构建体验</h3><p><font color="red"><u>体验</u></font>是指存在于玩家脑海中的情感、想法以及决策。</p><p>体验是一种贯穿游戏始终的，游戏对玩家内心所造成的所有影响的综合体现。 </p><h3 id="游戏中通过混合情感来制造体验的方法"><a href="#游戏中通过混合情感来制造体验的方法" class="headerlink" title="游戏中通过混合情感来制造体验的方法"></a>游戏中通过混合情感来制造体验的方法</h3><h4 id="纯粹的情感"><a href="#纯粹的情感" class="headerlink" title="纯粹的情感"></a>纯粹的情感</h4><p>为了让某一种情感的效果最大化，我们可以把多种能够引发相同情感的情感触发器结合在一起使用。</p><h4 id="并列"><a href="#并列" class="headerlink" title="并列"></a>并列</h4><p><font color="red"><u>并列（juxtaposition）</u></font>指的是把完全不同的、貌似不兼容的一些感觉组合到一起。 把这些通常不会混合在一起的感觉组合在一起，可以产生一些奇怪的、有时候甚至是非常有价值的效果。</p><h4 id="对立的情感"><a href="#对立的情感" class="headerlink" title="对立的情感"></a>对立的情感</h4><p>有些情感在单独触发时没问题，而放在一起却很难共存，因为它们是彼此对立的。 </p><p>并列和对立的情感之间只有一线之隔。有时候试图并列两种情感不但不能达到预期的效果，而且会造成完全互斥的局面。</p><h4 id="氛围"><a href="#氛围" class="headerlink" title="氛围"></a>氛围</h4><p>当你体验到的情感不属于某个具体的事件，而是像雾一样渗透到了游戏整体的体验之中时，我们称之为<font color="red"><u>“氛围”（Atmosphere）</u></font>。</p><p>有些游戏会弱化那些单独的事件所引发的情感，而着重于烘托出一种浓厚的氛围，从而使得玩家沉迷其中。 </p><h4 id="情感变化"><a href="#情感变化" class="headerlink" title="情感变化"></a>情感变化</h4><p>任何一种情感持续的时间太久都会令人失去兴趣。为了保持动力和新鲜感，体验感必须有所变化。</p><p>一个典型的节奏曲线会从底部开始，然后不断攀升和保持，最后在结束之前到达高潮，如下图所示。<br><img src="https://s2.loli.net/2021/12/09/ythoCxrNALYX6Ml.jpg"></p><p>除了通过调整节奏来改变情感的强度，我们还可以改变情感的特性（比如从正面情感到负面情感）。心理学家称之为<font color="red"><u>“情感的效价（valence）特征”</u></font>。比如愤怒、悲伤，以及恐惧都是高强度的情感，但是它们的效价却不尽相同。而满足、舒缓以及沮丧，则都是具有不同效价的低强度情感。我们还可以通过效价和强度来绘制出一幅情感走向图（如下图所示）。</p><p><img src="https://s2.loli.net/2021/12/10/DwxFH5vObBErWVm.jpg"></p><h4 id="心流"><a href="#心流" class="headerlink" title="心流"></a>心流</h4><p><font color="red"><u>心流（flow）</u></font>是一种注意力高度集中的状态，等同于全神贯注于某种活动的感觉。</p><p>当玩家遇到某种足以匹敌他自身能力的挑战时，心流就会出现。如果挑战太过困难，当玩家感到困惑和焦虑时，心流就会消失；而如果挑战过于简单，玩家就会觉得无聊，心流也会消失，如下图所示。</p><p><img src="https://s2.loli.net/2021/12/10/t7jkCTLJFXpHDBn.jpg"></p><p>在任何情况下，如果心流消失，那么体验的其他部分也会支离破碎。几乎所有的游戏都要保证心流的正常运转，而那些不好玩的游戏所出现的问题几乎都和心流消失有关。</p><h4 id="沉浸"><a href="#沉浸" class="headerlink" title="沉浸"></a>沉浸</h4><p>最强大的游戏体验之一是<font color="red"><u>沉浸（immersion）</u></font>。沉浸指的是，玩家自己的思维和他在游戏中的角色融为了一体，于是发生在游戏角色身上的事件对玩家来说也意义重大，就好像这个事件是真实地发生在玩家自己身上一样。</p><p>当玩家的体验能够反映游戏角色的体验时，沉浸现象就会出现。</p><p><font color="red"><u>情绪二因论（two-factortheory of emotion）</u></font><br>指出，情绪是由生理唤醒（physiolog-ical arousal）和认知因素（cognitive label）这两部分所组成的。</p><p><font color="red"><u>唤醒（arousal）</u></font>指的是一种被激活并且准备开动的状态。</p><p><font color="red"><u>认知因素（cognitive level）</u></font>是主观意识对激发唤醒状态的原因所做出的一种解释。</p><p>情绪二因论的关键之处在于，它认为所有情况下的唤醒状态都是相同的。也就是说，从心理学角度来看，愤怒和害怕之间没有任何区别，只是我们把它们标识为不同的情感而已。</p><p>为了能够真实反映出游戏角色的体验，我们可以通过3个步骤来实现。首先，通过制造心流，把真实世界从玩家脑海中剥离出去。其次，通过游戏机制所创造的威胁和挑战来激发唤醒状态。最后，利用虚构层来重新标识这个唤醒状态，使玩家的感受能够和游戏角色的感受完全匹配。</p><h2 id="体验引擎"><a href="#体验引擎" class="headerlink" title="体验引擎"></a>体验引擎</h2><p><img src="https://s2.loli.net/2021/12/10/lIirBSROQ3DcGPE.jpg"></p><p>游戏是一种制造体验的人工系统。</p><p>如果你希望为游戏打个比方，千万不要用故事或者电影。这些东西并没有抓住游戏的关键特性，因为它们都缺少通过游戏机制产生的动态交互。它们将我们带入预先定义好的体验中，却从此远离了一片拥有大量自由性、探索性和交互性的处女地。我们不如换个角度，把游戏想象成一种特殊的机器：能够产生各种体验的引擎。</p>]]></content>
      
      
      <categories>
          
          <category> 阅读笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 体验引擎：游戏设计全景探秘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown参考手册</title>
      <link href="2020/10/30/markdown-can-kao-shou-ce/"/>
      <url>2020/10/30/markdown-can-kao-shou-ce/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Markdown是一种轻量级标记语言，创始人为John Gruber. 它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。</p></blockquote><a id="more"></a><h1 id="1-基本语法"><a href="#1-基本语法" class="headerlink" title="1. 基本语法"></a>1. 基本语法</h1><h2 id="1-1-格式"><a href="#1-1-格式" class="headerlink" title="1.1 格式"></a>1.1 格式</h2><p>使用星号<code>*</code>或者下划线<code>_</code>表示斜体或加粗。</p><p>一对符号是<em>斜体</em><br>两对符号是<strong>粗体</strong><br>二者可以叠加，即三对符号为**<em>斜体加粗**</em></p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/FV4fB2H57JizC6G.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/yl4PYupIb2ZvnAF.png"></p></blockquote><p>使用两对波浪线<code>~</code>添加删除线。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/DBoX6rfEm9n5JeI.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/kBbLqDFrSvu6ti1.png"></p></blockquote><p>若想添加下划线，则只能使用html的<code>&lt;u&gt;</code>标签。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/8YHvPGLNKRlqIuO.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/PfyupjGdEmtK2VM.png"></p></blockquote><h2 id="1-2-段落"><a href="#1-2-段落" class="headerlink" title="1.2 段落"></a>1.2 段落</h2><p>段落是连续的几行文本，段落之间有一行或多行空白行。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/TXlWbiRa5pYGZ7J.png"></p></blockquote><p>若要添加换行符，请在行尾添加一个反斜杠<code>\</code>或两个空格<code> </code>。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/AwY8t7dRf3WHO9I.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/9U3xlyFqbOA6P7Y.png"></p></blockquote><h2 id="1-3-标题"><a href="#1-3-标题" class="headerlink" title="1.3 标题"></a>1.3 标题</h2><p>在一行文字的前面加井号<code>#</code>表示这行是一个标题，标题文字与最后一个井号<code>#</code>中间需要用一个空格<code> </code>分隔开。</p><p>一个井号<code>#</code>是一级标题，两个井号<code>##</code>是二级标题，以此类推，最多支持六级标题。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/zDCveQSIMbAt2sP.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/OW7C3dVvmHPrzni.png"></p></blockquote><p>标题里也可以包含<em>斜体</em>或<strong>粗体</strong>那样的格式。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/l3fTDp7VtZ8bBNL.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/yJn8dmcGZateHT1.png"></p></blockquote><h2 id="1-4-引用"><a href="#1-4-引用" class="headerlink" title="1.4 引用"></a>1.4 引用</h2><p>在一行的开头使用大于号<code>&gt;</code>来创建一个引用块，大于号<code>&gt;</code>后面可以加一个空格<code> </code>，也可以不加。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/eEosLCarHZROX2h.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/zsLZlrPAm9HuaE5.png"></p></blockquote><p>若要保持引用块连续，在引用块内的空行必须以大于号<code>&gt;</code>开头。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/hB8kAFdWvOmVzoE.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/Y8bjuHJBPo2dUKZ.png"></p></blockquote><p>引用块可以嵌套。</p><blockquote><p>示例；</p><p><img src="https://i.loli.net/2020/10/31/6Rel5EIHzNZXqjG.png"></p></blockquote><p>引用块内也可以使用其他Markdown语法。</p><h2 id="1-5-列表"><a href="#1-5-列表" class="headerlink" title="1.5 列表"></a>1.5 列表</h2><p>无序列表可以使用星号<code>*</code>、加号<code>+</code>或连字符<code>-</code>作为列表标记，标记符后面要跟一个空格<code> </code>。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/xtdjp74KTsCb5MP.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/BrtYsgjKmOoHNVD.png"></p></blockquote><p>有序列表使用数字后跟点<code>.</code>或右括号<code>)</code>。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/FN2pE6bd9KCJ1Ye.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/oWrlgtsx3PkL1Dz.png"></p></blockquote><p>有序列表前面的数字可以没有顺序，Markdown会自动从第一个数字开始按顺序显示。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/Oe9oTNAwkPiIrYc.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/iz2BoJk9VcMKHuF.png"></p></blockquote><p>使用缩进可以表示多级列表</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/AIg6fW1xGhiXyEC.png"></p><p><img src="https://i.loli.net/2020/10/31/bK3EuRtaCANUdBP.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/LO1wzqvFYUCPcj2.png"></p><p><img src="https://i.loli.net/2020/10/31/rBDwiWAuLEgNSRa.png"></p></blockquote><p>如果你不想使用有序列表，在点<code>.</code>之前要加上反斜杠<code>\</code>。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/iV6zwTPkcf1Cg9H.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/WTqCnGZsJwbXERx.png"></p></blockquote><h2 id="1-6-超链接"><a href="#1-6-超链接" class="headerlink" title="1.6 超链接"></a>1.6 超链接</h2><p>超链接的文本用方括号<code>[]</code>括起来。</p><p>超链接可以位于一行文本之中，位于文本行中的超链接，其链接要用小括号<code>()</code>括起来。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/VW9UISNATsoYg1l.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/fQyVramgxYOA9us.png"></p></blockquote><p>超链接也可以作为引用参考放在文本的末尾，方括号<code>[]</code>之间不能有空格<code> </code>。链接的定义可以放在空行之后的任何地方，但通常放在一个段落的底部。定义标识符可以由字母、数字、空格和标点符号组成，它们不区分大小写。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/xO9oSnRMjQAcUIJ.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/2qLVCD6fsNWJx7K.png"></p></blockquote><p>链接可以有一个描述，也可以没有。这个描述将在鼠标悬停在超链接文字上时显示。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/hcjBT9eG2vSnRwN.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/J25kzYcbyEjwduN.png"></p></blockquote><p>相对路径也可以使用。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/Wr5dEYOsbQPIcNM.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/Wr5dEYOsbQPIcNM.png"></p></blockquote><p>在某些Markdown版本中，除非加上尖括号<code>&lt;&gt;</code>，否则路径可能不会成为链接。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/XanqfMmyhvD4NU2.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/RW7kaAHL34w2U9i.png"></p></blockquote><h2 id="1-7-图片"><a href="#1-7-图片" class="headerlink" title="1.7 图片"></a>1.7 图片</h2><p>图片和超链接很像，只是在方括号<code>[]</code>之前多了一个感叹号<code>!</code>，其他语法相同。需要注意的是，图片的方括号<code>[]</code>内可以留空。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/RT2B5i6snq9UCFl.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/FIbm7oMeD5s9E82.png"></p></blockquote><h2 id="1-8-代码块"><a href="#1-8-代码块" class="headerlink" title="1.8 代码块"></a>1.8 代码块</h2><p>代码块内的每个字符与键入的字符完全相同。</p><p>要在一行文本内引用代码，可以把用反引号<code>`</code>包括起来。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/iBMvkXfSpJN4WL5.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/WTb3wExd89gQhoR.png"></p></blockquote><p>若要建立单独的代码块，则要在代码块的上下两行分别输入三个反引号<code>`</code>，或者分别缩进四个空格<code> </code>或一个制表符<code>Tab</code>。若使用缩进的方式，则代码块将持续直到到达未缩进的行。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/gnoTQcrOHwSGXti.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/r2ijhn4JSZW1QAy.png"></p></blockquote><p>使用三个反引号<code>`</code>建立代码块时，在代码块上面的三个反引号后面加上语言名称可以实现代码高亮显示。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/mlihPYwoBcebySR.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/XjBrMaYVFGR4NUL.png"></p></blockquote><h2 id="1-9-分割线"><a href="#1-9-分割线" class="headerlink" title="1.9 分割线"></a>1.9 分割线</h2><p>使用三个连字符<code>-</code>或星号<code>*</code>创建分割线。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/3xOGgK18bpEA6qu.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/FXvGA239zCU8dDP.png"></p></blockquote><h2 id="1-10-表格"><a href="#1-10-表格" class="headerlink" title="1.10 表格"></a>1.10 表格</h2><p>使用一根竖线来分隔各个单元格，使用冒号来决定单元格的对齐方向，冒号在左边表示左对齐，右边表示右对齐，两边都有表示居中。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/iCMS2LH9hw6j4kG.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/Iie9YlfxHLgC47S.png"></p></blockquote><h2 id="1-11-支持的HTML元素"><a href="#1-11-支持的HTML元素" class="headerlink" title="1.11 支持的HTML元素"></a>1.11 支持的HTML元素</h2><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。目前支持的 HTML 元素有：&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;等。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/1mzGpAidcE7svXk.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/i5EU89dW1pezCkI.png"></p></blockquote><h1 id="2-常用技巧"><a href="#2-常用技巧" class="headerlink" title="2. 常用技巧"></a>2. 常用技巧</h1><h2 id="2-1-缩进字符"><a href="#2-1-缩进字符" class="headerlink" title="2.1 缩进字符"></a>2.1 缩进字符</h2><p>不断行的空白字符 &amp;nbsp; 或 &amp;#160;<br>半角的空格 &amp;ensp; 或 &amp;#8194;<br>全角的空格 &amp;emsp; 或 &amp;#8195;</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/zmWtxlfJYX2ikpO.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/UHtOZpba5cmWTMu.png"></p></blockquote><h2 id="2-2-特殊符号"><a href="#2-2-特殊符号" class="headerlink" title="2.2 特殊符号"></a>2.2 特殊符号</h2><p>Markdown语法中的符号前加反斜线可显示符号本身。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/dV7FG6hQtiRcJop.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/vguABszMWZSrYP9.png"></p></blockquote><p>其他特殊符号可使用HTML代码。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/J8Wn4egS9FDszav.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/xHtLz7OQJ24wZGA.png"></p></blockquote><p>若想了解更多可查阅<a href="https://unicode-table.com/cn/" title="Unicode字符百科">Unicode字符百科</a></p><h2 id="2-3-字体，字号与颜色"><a href="#2-3-字体，字号与颜色" class="headerlink" title="2.3 字体，字号与颜色"></a>2.3 字体，字号与颜色</h2><p>Markdown本身不支持修改字体、字号与颜色等功能，但我们可以借助HTML实现这些项目的修改。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/HAOV1J8e6UgCylS.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/X6No8l4thmG5KBT.png"></p></blockquote><p><strong>注：</strong> Size为规定文本的尺寸大小。可能的值：从 1 到 7 的数字。浏览器默认值是 3</p><h2 id="2-4-内容目录"><a href="#2-4-内容目录" class="headerlink" title="2.4 内容目录"></a>2.4 内容目录</h2><p>一般文章开头加上<code>[TOC]</code>就可以显示全文内容的目录结构。（某些Markdown版本不支持）</p><p>你也可以使用列表+超链接的方式手动制作目录。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/pTjaUV7Jy5AOqnF.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/NruOdWclgznKs7x.png"></p></blockquote><h2 id="2-5-Emoji"><a href="#2-5-Emoji" class="headerlink" title="2.5 Emoji"></a>2.5 Emoji</h2><p>emoji表情使用<code>:EMOJICODE:</code>的格式。（此功能许多Markdown工具或者网站不支持）</p><p>可查阅<a href="https://emojipedia.org/" title="Emojipedia">Emojipedia</a></p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/iCP9ExX4dhR35gr.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/WH1KjV8ptByYkAd.png"></p></blockquote><h1 id="3-高级语法"><a href="#3-高级语法" class="headerlink" title="3. 高级语法"></a>3. 高级语法</h1><p>这些语法许多软件或网站不支持，不过还是值得介绍。</p><h2 id="3-1-LaTeX公式"><a href="#3-1-LaTeX公式" class="headerlink" title="3.1 LaTeX公式"></a>3.1 LaTeX公式</h2><p>行内LaTeX公式，用一对<code>$</code>包括起来。</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/CAfV5ILKJkxphqw.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/sMBgtxC3GrvQYdu.png"></p></blockquote><p>行间LaTeX公式，用两对<code>$</code>包括起来</p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/HjtS41echDGguk2.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/1mMSY3bqOyhzBcf.png"></p></blockquote><h2 id="3-2-流程图"><a href="#3-2-流程图" class="headerlink" title="3.2 流程图"></a>3.2 流程图</h2><p>具体语法参考<a href="https://www.jianshu.com/p/02a5a1bf1096" title="用markdown来画流程图">用markdown来画流程图</a></p><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/k8EwMBZcRj5hCHl.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/Oqfl3z5VTxant1p.png"></p></blockquote><h2 id="3-3-待办事宜"><a href="#3-3-待办事宜" class="headerlink" title="3.3 待办事宜"></a>3.3 待办事宜</h2><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/12dmpSr5HEjU7nC.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/rQ5tI4CER6bj2Ue.png"></p></blockquote><h2 id="3-4-序列图"><a href="#3-4-序列图" class="headerlink" title="3.4 序列图"></a>3.4 序列图</h2><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/u8qnhgzIULys5HY.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/RdkfQoa4Lh5D8gP.png"></p></blockquote><h2 id="3-5-甘特图"><a href="#3-5-甘特图" class="headerlink" title="3.5 甘特图"></a>3.5 甘特图</h2><blockquote><p>示例：</p><p><img src="https://i.loli.net/2020/10/31/e6CgGbyzO4j2x5D.png"></p><p>效果：</p><p><img src="https://i.loli.net/2020/10/31/fFgGoLmlQbsWtPB.png"></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
